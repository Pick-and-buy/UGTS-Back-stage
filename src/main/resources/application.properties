# Application
spring.application.name=Use-Good-Trading-System

# Server
server.port=8080

# Data source
spring.datasource.url=jdbc:postgresql://localhost:5432/ugts_db
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=admin
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Jwt
jwt.signerKey="qmNRrh0SEUIwbSmct8DKE6lPrcCzS5UJoAOg5mNrPpvfHU/G4sxuSGwxEsLiO+oX"
jwt.valid-duration= 84600
jwt.refresh-duration = 604800

# Via Email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=quangtahe161550@fpt.edu.vn
spring.mail.password=htzq rzuz vnid gsrw
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Google Cloud Storage
spring.cloud.gcp.storage.enabled=true
google.cloud.storage.bucket=capstone-luxury-handbags

# Multiparts Properties
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=10MB


# Elasticsearch
#spring.elasticsearch.uris=http://localhost:9200
#spring.data.elasticsearch.repositories.enabled=true
#spring.data.elasticsearch.cluster-name=elasticsearch
#spring.data.elasticsearch.cluster-nodes=
#spring.main.allow-bean-definition-overriding=true
#spring.jackson.default-property-inclusion=non_null

#spring.security.oauth2.client.registration.google.client-id = *clientId*
#spring.security.oauth2.client.registration.google.client-secret= = *secret*

spring.cloud.gcp.firestore.project-id=capstone-9dd16
spring.cloud.gcp.firestore.enabled=true
spring.cloud.gcp.credentials.location=classpath:firebase-service-account.json
spring.cloud.gcp.security.firebase.enabled=false
spring.cloud.gcp.firestore.credentials.location=classpath:firebase-service-account.json

spring.kafka.bootstrap-servers=localhost:9094
spring.kafka.consumer.bootstrap-servers=localhost:9094
spring.kafka.consumer.group-id=notification_group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=localhost:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


